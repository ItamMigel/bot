"""–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
import asyncio
from app.database import async_session_maker, Category, Dish


async def create_test_data():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    async with async_session_maker() as session:
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = [
            Category(
                name="ü•ó –°–∞–ª–∞—Ç—ã",
                description="–°–≤–µ–∂–∏–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–∞–ª–∞—Ç—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å",
                is_active=True,
                sort_order=1
            ),
            Category(
                name="üç≤ –°—É–ø—ã",
                description="–ì–æ—Ä—è—á–∏–µ –¥–æ–º–∞—à–Ω–∏–µ —Å—É–ø—ã",
                is_active=True,
                sort_order=2
            ),
            Category(
                name="üçñ –ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞",
                description="–°—ã—Ç–Ω—ã–µ –≤—Ç–æ—Ä—ã–µ –±–ª—é–¥–∞",
                is_active=True,
                sort_order=3
            ),
            Category(
                name="ü•ß –í—ã–ø–µ—á–∫–∞",
                description="–î–æ–º–∞—à–Ω—è—è –≤—ã–ø–µ—á–∫–∞ –∏ –¥–µ—Å–µ—Ä—Ç—ã",
                is_active=True,
                sort_order=4
            )
        ]
        
        session.add_all(categories)
        await session.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        
        # –°–æ–∑–¥–∞–µ–º –±–ª—é–¥–∞
        dishes = [
            # –°–∞–ª–∞—Ç—ã
            Dish(
                name="–¶–µ–∑–∞—Ä—å —Å –∫—É—Ä–∏—Ü–µ–π",
                description="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π, —Å—ã—Ä–æ–º –ø–∞—Ä–º–µ–∑–∞–Ω –∏ —Å—É—Ö–∞—Ä–∏–∫–∞–º–∏",
                price=350.0,
                category_id=categories[0].id,
                is_available=True,
                sort_order=1
            ),
            Dish(
                name="–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç",
                description="–°–≤–µ–∂–∏–µ –æ–≤–æ—â–∏ —Å —Å—ã—Ä–æ–º —Ñ–µ—Ç–∞ –∏ –æ–ª–∏–≤–∫–∞–º–∏",
                price=280.0,
                category_id=categories[0].id,
                is_available=True,
                sort_order=2
            ),
            
            # –°—É–ø—ã
            Dish(
                name="–ë–æ—Ä—â —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π",
                description="–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ä—â —Å–æ —Å–º–µ—Ç–∞–Ω–æ–π",
                price=250.0,
                category_id=categories[1].id,
                is_available=True,
                sort_order=1
            ),
            Dish(
                name="–°–æ–ª—è–Ω–∫–∞ –º—è—Å–Ω–∞—è",
                description="–ù–∞—Å—ã—â–µ–Ω–Ω–∞—è —Å–æ–ª—è–Ω–∫–∞ —Å –º—è—Å–Ω—ã–º–∏ –¥–µ–ª–∏–∫–∞—Ç–µ—Å–∞–º–∏",
                price=300.0,
                category_id=categories[1].id,
                is_available=True,
                sort_order=2
            ),
            
            # –ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞
            Dish(
                name="–ö–æ—Ç–ª–µ—Ç—ã –ø–æ-–∫–∏–µ–≤—Å–∫–∏",
                description="–ù–µ–∂–Ω—ã–µ –∫–æ—Ç–ª–µ—Ç—ã —Å –º–∞—Å–ª–æ–º –∏ –∑–µ–ª–µ–Ω—å—é",
                price=450.0,
                category_id=categories[2].id,
                is_available=True,
                sort_order=1
            ),
            Dish(
                name="–ü–ª–æ–≤ —É–∑–±–µ–∫—Å–∫–∏–π",
                description="–ê—Ä–æ–º–∞—Ç–Ω—ã–π –ø–ª–æ–≤ —Å –±–∞—Ä–∞–Ω–∏–Ω–æ–π",
                price=380.0,
                category_id=categories[2].id,
                is_available=True,
                sort_order=2
            ),
            
            # –í—ã–ø–µ—á–∫–∞
            Dish(
                name="–®–∞—Ä–ª–æ—Ç–∫–∞ —Å —è–±–ª–æ–∫–∞–º–∏",
                description="–î–æ–º–∞—à–Ω—è—è —à–∞—Ä–ª–æ—Ç–∫–∞ —Å–æ —Å–≤–µ–∂–∏–º–∏ —è–±–ª–æ–∫–∞–º–∏",
                price=180.0,
                category_id=categories[3].id,
                is_available=True,
                sort_order=1
            ),
            Dish(
                name="–ù–∞–ø–æ–ª–µ–æ–Ω",
                description="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ç–æ—Ä—Ç –ù–∞–ø–æ–ª–µ–æ–Ω",
                price=250.0,
                category_id=categories[3].id,
                is_available=True,
                sort_order=2
            )
        ]
        
        session.add_all(dishes)
        await session.commit()
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")
        print(f"üìÇ –°–æ–∑–¥–∞–Ω–æ {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print(f"üçΩ –°–æ–∑–¥–∞–Ω–æ {len(dishes)} –±–ª—é–¥")


if __name__ == "__main__":
    asyncio.run(create_test_data())
