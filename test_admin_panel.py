#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
from app.database import async_session_maker, Order, Dish
from sqlalchemy import select

async def test_admin_features():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
    print("=" * 60)
    
    async with async_session_maker() as session:
        # 1. –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤
        print("\n1. üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤:")
        
        # –í—Å–µ –∑–∞–∫–∞–∑—ã
        result = await session.execute(select(Order).order_by(Order.created_at.desc()).limit(10))
        all_orders = result.scalars().all()
        print(f"   ‚úÖ –í—Å–µ –∑–∞–∫–∞–∑—ã: {len(all_orders)}")
        
        # –û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã
        result = await session.execute(
            select(Order).where(Order.status == 'pending_payment').limit(10)
        )
        pending_orders = result.scalars().all()
        print(f"   ‚úÖ –û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã: {len(pending_orders)}")
        
        # –û–ø–ª–∞—á–µ–Ω—ã, –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        result = await session.execute(
            select(Order).where(Order.status == 'payment_received').limit(10)
        )
        paid_orders = result.scalars().all()
        print(f"   ‚úÖ –û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {len(paid_orders)}")
        
        # –í —Ä–∞–±–æ—Ç–µ
        result = await session.execute(
            select(Order).where(Order.status == 'confirmed').limit(10)
        )
        working_orders = result.scalars().all()
        print(f"   ‚úÖ –í —Ä–∞–±–æ—Ç–µ: {len(working_orders)}")
        
        # –ì–æ—Ç–æ–≤—ã–µ
        result = await session.execute(
            select(Order).where(Order.status == 'ready').limit(10)
        )
        ready_orders = result.scalars().all()
        print(f"   ‚úÖ –ì–æ—Ç–æ–≤—ã–µ: {len(ready_orders)}")
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
        result = await session.execute(
            select(Order).where(Order.status == 'completed').limit(10)
        )
        completed_orders = result.scalars().all()
        print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ: {len(completed_orders)}")
        
        # –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ
        result = await session.execute(
            select(Order).where(Order.status.in_(['cancelled_by_client', 'cancelled_by_master'])).limit(10)
        )
        cancelled_orders = result.scalars().all()
        print(f"   ‚úÖ –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ: {len(cancelled_orders)}")
        
        # 2. –¢–µ—Å—Ç –ø–æ–ª—è payment_photo_file_id
        print("\n2. üì∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è payment_photo_file_id:")
        if all_orders:
            order = all_orders[0]
            print(f"   ‚úÖ –ó–∞–∫–∞–∑ #{order.id}: payment_photo_file_id = {order.payment_photo_file_id}")
        
        # 3. –¢–µ—Å—Ç telegram_post_url –¥–ª—è –±–ª—é–¥
        print("\n3. üìñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è telegram_post_url –¥–ª—è –±–ª—é–¥:")
        result = await session.execute(select(Dish).limit(5))
        dishes = result.scalars().all()
        for dish in dishes:
            print(f"   ‚úÖ –ë–ª—é–¥–æ '{dish.name}': telegram_post_url = {dish.telegram_post_url}")
        
        # 4. –¢–µ—Å—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        print("\n4. üî• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:")
        result = await session.execute(
            select(Order).where(Order.status != 'cart').order_by(Order.created_at.desc()).limit(10)
        )
        active_orders = result.scalars().all()
        print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã (–∏—Å–∫–ª—é—á–∞—è –∫–æ—Ä–∑–∏–Ω—ã): {len(active_orders)}")
        
    print("\n" + "=" * 60)
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –§–∏–ª—å—Ç—Ä—ã –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    print("‚úÖ –ü–æ–ª—è –¥–ª—è —Ñ–æ—Ç–æ –æ–ø–ª–∞—Ç—ã –∏ —Å—Å—ã–ª–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    print("üöÄ –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    asyncio.run(test_admin_features())
