"""–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥"""
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext

from app.utils import texts, UserStates
from app.keyboards.user import get_main_menu_keyboard
from app.database import User

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.set_state(UserStates.MAIN_MENU)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    from app.services.cart import CartService
    from app.database import async_session_maker
    from app.config import settings
    
    async with async_session_maker() as session:
        cart_count = await CartService.get_cart_count(session, user.id)
    
    await message.answer(
        settings.welcome_message,
        reply_markup=get_main_menu_keyboard(cart_count)
    )


@router.message(Command("help"))
@router.message(F.text == texts.BUTTON_HELP)
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer(texts.HELP_MESSAGE)


@router.message(F.text == texts.BUTTON_MAIN_MENU)
@router.callback_query(F.data == "main_menu")
async def main_menu(event: Message | CallbackQuery, state: FSMContext, user: User = None):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.set_state(UserStates.MAIN_MENU)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    cart_count = 0
    if user:
        from app.services.cart import CartService
        from app.database import async_session_maker
        
        async with async_session_maker() as session:
            cart_count = await CartService.get_cart_count(session, user.id)
    
    if isinstance(event, CallbackQuery):
        from app.config import settings
        await event.message.edit_text(
            settings.welcome_message,
            reply_markup=None
        )
        await event.message.answer(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=get_main_menu_keyboard(cart_count)
        )
        await event.answer()
    else:
        await event.answer(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=get_main_menu_keyboard(cart_count)
        )


@router.message(StateFilter(None))
async def any_message(message: Message, state: FSMContext, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ None"""
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: '{message.text}'")
    await state.set_state(UserStates.MAIN_MENU)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    from app.services.cart import CartService
    from app.database import async_session_maker
    
    async with async_session_maker() as session:
        cart_count = await CartService.get_cart_count(session, user.id)
    
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard(cart_count)
    )


@router.message()
async def debug_all_messages(message: Message, state: FSMContext, user: User = None):
    """–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º)"""
    current_state = await state.get_state()
    logging.info(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id if user else 'Unknown'}: '{message.text}', —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if not user:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        return
    
    # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if not current_state:
        await state.set_state(UserStates.MAIN_MENU)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    from app.services.cart import CartService
    from app.database import async_session_maker
    
    async with async_session_maker() as session:
        cart_count = await CartService.get_cart_count(session, user.id)
    
    await message.answer(
        "ü§î –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
        reply_markup=get_main_menu_keyboard(cart_count)
    )
