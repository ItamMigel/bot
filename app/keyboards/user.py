"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton, 
    InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from typing import List, Optional
from app.utils import texts


def get_main_menu_keyboard(cart_count: int = 0) -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    builder = ReplyKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–æ–≤
    cart_text = texts.BUTTON_CART
    if cart_count > 0:
        cart_text += f" ({cart_count})"
    
    builder.row(
        KeyboardButton(text=texts.BUTTON_MENU),
        KeyboardButton(text=cart_text)
    )
    builder.row(
        KeyboardButton(text=texts.BUTTON_ORDERS),
        KeyboardButton(text=texts.BUTTON_FAQ)
    )
    builder.row(
        KeyboardButton(text=texts.BUTTON_HELP)
    )
    
    return builder.as_markup(resize_keyboard=True)


def get_categories_keyboard(categories) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –±–ª—é–¥"""
    builder = InlineKeyboardBuilder()
    
    for category in categories:
        builder.row(
            InlineKeyboardButton(
                text=f"üìÇ {category.name}",
                callback_data=f"category_{category.id}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_dishes_keyboard(dishes, category_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –±–ª—é–¥–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    builder = InlineKeyboardBuilder()
    
    for dish in dishes:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–Ω—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        dish_text = f"{dish.name} - {dish.price:.0f}‚ÇΩ"
        if not dish.is_available:
            dish_text += " (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)"
            
        builder.row(
            InlineKeyboardButton(
                text=dish_text,
                callback_data=f"dish_{dish.id}" if dish.is_available else "dish_unavailable"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_BACK,
            callback_data="menu"
        ),
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_dish_detail_keyboard(dish_id: int, category_id: int, dish=None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –±–ª—é–¥–∞"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    quantities = [1, 2, 3, 4, 5]
    quantity_buttons = []
    
    for qty in quantities:
        quantity_buttons.append(
            InlineKeyboardButton(
                text=str(qty),
                callback_data=f"add_to_cart_{dish_id}_{qty}"
            )
        )
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Ä—è–¥—ã –ø–æ 3 –∫–Ω–æ–ø–∫–∏
    for i in range(0, len(quantity_buttons), 3):
        builder.row(*quantity_buttons[i:i+3])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    builder.row(
        InlineKeyboardButton(
            text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            callback_data=f"input_quantity_{dish_id}_{category_id}"
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if dish and dish.telegram_post_url:
        builder.row(
            InlineKeyboardButton(
                text="üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ –∫–∞–Ω–∞–ª–µ",
                url=dish.telegram_post_url
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_BACK,
            callback_data=f"category_{category_id}"
        ),
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_cart_keyboard(cart_items) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã"""
    builder = InlineKeyboardBuilder()
    
    if cart_items:
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        for item in cart_items:
            builder.row(
                InlineKeyboardButton(
                    text=f"‚úèÔ∏è {item.dish.name} (x{item.quantity})",
                    callback_data=f"edit_cart_item_{item.id}"
                )
            )
        
        builder.row(
            InlineKeyboardButton(
                text=texts.BUTTON_CHECKOUT,
                callback_data="checkout"
            )
        )
        builder.row(
            InlineKeyboardButton(
                text=texts.BUTTON_CLEAR_CART,
                callback_data="clear_cart"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_MENU,
            callback_data="menu"
        ),
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_cart_item_edit_keyboard(item_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    builder.row(
        InlineKeyboardButton(text="-", callback_data=f"cart_decrease_{item_id}"),
        InlineKeyboardButton(text="1", callback_data=f"cart_set_{item_id}_1"),
        InlineKeyboardButton(text="2", callback_data=f"cart_set_{item_id}_2"),
        InlineKeyboardButton(text="3", callback_data=f"cart_set_{item_id}_3"),
        InlineKeyboardButton(text="+", callback_data=f"cart_increase_{item_id}")
    )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_REMOVE_ITEM,
            callback_data=f"cart_remove_{item_id}"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_BACK,
            callback_data="cart"
        )
    )
    
    return builder.as_markup()


def get_order_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_CONFIRM_ORDER,
            callback_data="confirm_order"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_CANCEL_ORDER,
            callback_data="cart"
        )
    )
    
    return builder.as_markup()


def get_payment_method_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_PAY_CARD,
            callback_data="payment_card"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_BACK,
            callback_data="cart"
        )
    )
    
    return builder.as_markup()


def get_orders_filter_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üî• –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã",
            callback_data="orders_active"
        ),
        InlineKeyboardButton(
            text="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ",
            callback_data="orders_completed"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üìã –í—Å–µ –∑–∞–∫–∞–∑—ã",
            callback_data="orders_all"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_orders_keyboard(orders, filter_type="all") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    for order in orders:
        status_emoji = "üõí" if order.status == "cart" else "üìã"
        if order.is_active:
            status_emoji = "üî•"
        elif order.is_completed:
            status_emoji = "‚úÖ"
            
        order_text = f"{status_emoji} –ó–∞–∫–∞–∑ #{order.id} - {order.total_amount:.0f}‚ÇΩ"
        
        builder.row(
            InlineKeyboardButton(
                text=order_text,
                callback_data=f"order_{order.id}"
            )
        )
    
    # –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    filter_buttons = []
    if filter_type != "active":
        filter_buttons.append(
            InlineKeyboardButton(
                text="üî• –ê–∫—Ç–∏–≤–Ω—ã–µ",
                callback_data="orders_active"
            )
        )
    if filter_type != "completed":
        filter_buttons.append(
            InlineKeyboardButton(
                text="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ", 
                callback_data="orders_completed"
            )
        )
    if filter_type != "all":
        filter_buttons.append(
            InlineKeyboardButton(
                text="üìã –í—Å–µ",
                callback_data="orders_all"
            )
        )
    
    if filter_buttons:
        builder.row(*filter_buttons)
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_order_details_keyboard(order_id: int, can_repeat: bool = False, can_cancel: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()
    
    if can_repeat:
        builder.row(
            InlineKeyboardButton(
                text=texts.BUTTON_REPEAT_ORDER,
                callback_data=f"repeat_order_{order_id}"
            )
        )
    
    if can_cancel:
        builder.row(
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑",
                callback_data=f"cancel_order_confirm_{order_id}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text=texts.BUTTON_BACK,
            callback_data="back_to_orders"
        ),
        InlineKeyboardButton(
            text=texts.BUTTON_MAIN_MENU,
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


def get_confirm_action_keyboard(action: str, item_id: Optional[int] = None) -> InlineKeyboardMarkup:
    """–û–±—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()
    
    confirm_callback = f"confirm_{action}"
    cancel_callback = f"cancel_{action}"
    
    if item_id:
        confirm_callback += f"_{item_id}"
        cancel_callback += f"_{item_id}"
    
    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=confirm_callback),
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=cancel_callback)
    )
    
    return builder.as_markup()
